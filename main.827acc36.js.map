{"version":3,"sources":["scripts/main.js"],"names":["gameScore","document","querySelector","button","messageLose","messageWin","messageStart","fieldRow","querySelectorAll","score","board","initBoard","gameReset","classList","renderGameBoard","row","column","children","textContent","className","getRandomNumber","Math","floor","random","setRandomCell","x","y","gameCheck","findNull","flat","some","cell","includes","removeEventListener","keyPress","gameStatus","startGame","replace","hidden","addEventListener","rotateBoard","map","_","columnIndex","moveLeft","arr","notNull","filter","ceil","nulls","Array","length","fill","moveRight","keypress","key"],"mappings":";AAAA,aAqLC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnLD,IAAMA,EAAYC,SAASC,cAAc,eACnCC,EAASF,SAASC,cAAc,WAEhCE,EAAcH,SAASC,cAAc,iBACrCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAeL,SAASC,cAAc,kBAEtCK,EAAWN,SAASO,iBAAiB,cAEvCC,EAAQ,EACRC,EAAQC,IAEZ,SAASA,IACA,MAAA,CACL,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAMd,SAASC,IACPF,EAAQC,IACRF,EAAQ,EACRL,EAAYS,UAAY,8BACxBR,EAAWQ,UAAY,6BAGzB,SAASC,IACF,IAAA,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IACpB,IAAA,IAAIC,EAAS,EAAGA,EAAS,EAAGA,IAC/BT,EAASQ,GAAKE,SAASD,GAAQE,YAC7BR,EAAMK,GAAKC,GAAUN,EAAMK,GAAKC,GAAU,GAE5CT,EAASQ,GAAKE,SAASD,GAAQG,UACHT,0BAAAA,OAAAA,EAAMK,GAAKC,IAI3ChB,EAAUkB,YAAcT,EAG1B,SAASW,IACAC,OAAAA,KAAKC,MAAsB,EAAhBD,KAAKE,UAGzB,SAASC,IACQ,IAAA,EAAA,CACbJ,IACAA,KAFKK,EADgB,EAAA,GACbC,EADa,EAAA,GAMlBhB,EAAMe,GAAGC,GAIZF,KAHAd,EAAMe,GAAGC,GAAKL,KAAKE,UAAY,GAAM,EAAI,EACzCI,KAMJ,SAASA,IACDC,IAAAA,EAAWlB,EAAMmB,OAAOC,KAAK,SAAAC,GAAQA,OAAS,IAATA,IACzBrB,EAAMmB,OAEVG,SAAS,QACrB/B,SAASgC,oBAAoB,QAASC,GACtC7B,EAAWQ,UAAY,uBAKpB,IAFDsB,IAAAA,GAAa,EAERpB,EAAM,EAAGA,EAAM,EAAGA,IACpB,IAAA,IAAIC,EAAS,EAAGA,EAAS,EAAGA,IAC3BN,EAAMK,GAAKC,KAAYN,EAAMK,GAAKC,EAAS,IACxCN,EAAMM,GAAQD,KAASL,EAAMM,GAAQD,EAAM,KAChDoB,GAAa,IAKdP,GAAYO,IACf/B,EAAYS,UAAY,uBACxBZ,SAASgC,oBAAoB,QAASC,IAI1C,SAASE,IACoB,UAAvBjC,EAAOe,aACTf,EAAOU,UAAUwB,QAAQ,QAAS,WAClClC,EAAOe,YAAc,UACrBZ,EAAagC,QAAS,GAEtB1B,IAGFY,IACAA,IACAV,IACAb,SAASsC,iBAAiB,QAASL,GAGrC,SAASM,IACP9B,EAAQA,EAAM+B,IAAI,SAACC,EAAGC,GACpBjC,OAAAA,EAAM+B,IAAI,SAAA1B,GAAOA,OAAAA,EAAI4B,OAGzB,SAASC,EAASC,GACX,IAAA,IAAI9B,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAC1B+B,IAAAA,EAAUD,EAAI9B,GAAKgC,OAAO,SAAAC,GAAQA,OAAAA,EAAO,IACzCC,EAAQC,MAAM,EAAIJ,EAAQK,QAAQC,KAAK,GAE7CP,EAAI9B,GAAW+B,GAAAA,OAAAA,EAAAA,GAAYG,EAAAA,IAGxB,IAAA,IAAIlC,EAAM,EAAGA,EAAM,EAAGA,IACpB,IAAA,IAAIC,EAAS,EAAGA,EAAS,EAAGA,IAC3B6B,EAAI9B,GAAKC,KAAY6B,EAAI9B,GAAKC,EAAS,IAA2B,IAArB6B,EAAI9B,GAAKC,KACxD6B,EAAI9B,GAAKC,IAAW,EACpBP,GAASoC,EAAI9B,GAAKC,GAClB6B,EAAI9B,GAAKC,EAAS,GAAK,GAM/B,SAASqC,EAAUR,GACZ,IAAA,IAAI9B,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAC1B+B,IAAAA,EAAUD,EAAI9B,GAAKgC,OAAO,SAAAC,GAAQA,OAAAA,EAAO,IACzCC,EAAQC,MAAM,EAAIJ,EAAQK,QAAQC,KAAK,GAE7CP,EAAI9B,GAAWkC,GAAAA,OAAAA,EAAAA,GAAUH,EAAAA,IAGtB,IAAA,IAAI/B,EAAM,EAAGA,EAAM,EAAGA,IACpB,IAAA,IAAIC,EAAS,EAAGA,EAAS,EAAGA,IAC3B6B,EAAI9B,GAAKC,KAAY6B,EAAI9B,GAAKC,EAAS,IAA2B,IAArB6B,EAAI9B,GAAKC,KACxD6B,EAAI9B,GAAKC,IAAW,EACpBP,GAASoC,EAAI9B,GAAKC,GAClB6B,EAAI9B,GAAKC,EAAS,GAAK,GAM/B,SAASkB,EAASoB,GACRA,OAAAA,EAASC,KACV,IAAA,YACHX,EAASlC,GACTc,IACAV,IACA,MAEG,IAAA,UACH0B,IACAI,EAASlC,GACT8B,IACAhB,IACAV,IACA,MAEG,IAAA,aACHuC,EAAU3C,GACVc,IACAV,IACA,MAEG,IAAA,YACH0B,IACAa,EAAU3C,GACV8B,IACAhB,IACAV,KAxJNX,EAAOoC,iBAAiB,QAASH","file":"main.827acc36.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nconst fieldRow = document.querySelectorAll('.field-row');\n\nlet score = 0;\nlet board = initBoard();\n\nfunction initBoard() {\n  return [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n};\n\nbutton.addEventListener('click', startGame);\n\nfunction gameReset() {\n  board = initBoard();\n  score = 0;\n  messageLose.classList = 'message message-lose hidden';\n  messageWin.classList = 'message message-win hidden';\n};\n\nfunction renderGameBoard() {\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 4; column++) {\n      fieldRow[row].children[column].textContent\n      = board[row][column] ? board[row][column] : '';\n\n      fieldRow[row].children[column].className\n      = `field-cell field-cell--${board[row][column]}`;\n    }\n  }\n\n  gameScore.textContent = score;\n}\n\nfunction getRandomNumber() {\n  return Math.floor(Math.random() * 4);\n}\n\nfunction setRandomCell() {\n  const [x, y] = [\n    getRandomNumber(),\n    getRandomNumber(),\n  ];\n\n  if (!board[x][y]) {\n    board[x][y] = Math.random() >= 0.9 ? 4 : 2;\n    gameCheck();\n  } else {\n    setRandomCell();\n  }\n}\n\nfunction gameCheck() {\n  const findNull = board.flat().some(cell => cell === 0);\n  const boardCopy = board.flat();\n\n  if (boardCopy.includes(2048)) {\n    document.removeEventListener('keyup', keyPress);\n    messageWin.classList = 'message message-win';\n  }\n\n  let gameStatus = true;\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 3; column++) {\n      if (board[row][column] === board[row][column + 1]\n          || board[column][row] === board[column][row + 1]) {\n        gameStatus = false;\n      }\n    }\n  }\n\n  if (!findNull && gameStatus) {\n    messageLose.classList = 'message message-lose';\n    document.removeEventListener('keyup', keyPress);\n  }\n}\n\nfunction startGame() {\n  if (button.textContent === 'Start') {\n    button.classList.replace('start', 'restart');\n    button.textContent = 'Restart';\n    messageStart.hidden = true;\n  } else {\n    gameReset();\n  }\n\n  setRandomCell();\n  setRandomCell();\n  renderGameBoard();\n  document.addEventListener('keyup', keyPress);\n}\n\nfunction rotateBoard() {\n  board = board.map((_, columnIndex) =>\n    board.map(row => row[columnIndex]));\n}\n\nfunction moveLeft(arr) {\n  for (let row = 0; row < 4; row++) {\n    const notNull = arr[row].filter(ceil => ceil > 0);\n    const nulls = Array(4 - notNull.length).fill(0);\n\n    arr[row] = [...notNull, ...nulls];\n  }\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 0; column < 3; column++) {\n      if (arr[row][column] === arr[row][column + 1] && arr[row][column] !== 0) {\n        arr[row][column] *= 2;\n        score += arr[row][column];\n        arr[row][column + 1] = 0;\n      }\n    }\n  }\n}\n\nfunction moveRight(arr) {\n  for (let row = 0; row < 4; row++) {\n    const notNull = arr[row].filter(ceil => ceil > 0);\n    const nulls = Array(4 - notNull.length).fill(0);\n\n    arr[row] = [...nulls, ...notNull];\n  }\n\n  for (let row = 0; row < 4; row++) {\n    for (let column = 3; column > 0; column--) {\n      if (arr[row][column] === arr[row][column - 1] && arr[row][column] !== 0) {\n        arr[row][column] *= 2;\n        score += arr[row][column];\n        arr[row][column - 1] = 0;\n      }\n    }\n  }\n}\n\nfunction keyPress(keypress) {\n  switch (keypress.key) {\n    case 'ArrowLeft':\n      moveLeft(board);\n      setRandomCell();\n      renderGameBoard();\n      break;\n\n    case 'ArrowUp':\n      rotateBoard();\n      moveLeft(board);\n      rotateBoard();\n      setRandomCell();\n      renderGameBoard();\n      break;\n\n    case 'ArrowRight':\n      moveRight(board);\n      setRandomCell();\n      renderGameBoard();\n      break;\n\n    case 'ArrowDown':\n      rotateBoard();\n      moveRight(board);\n      rotateBoard();\n      setRandomCell();\n      renderGameBoard();\n      break;\n\n    default:\n      break;\n  }\n}\n"]}